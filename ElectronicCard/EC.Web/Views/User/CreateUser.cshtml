@model EC.Web.Models.CreateUserModel

@{
    ViewBag.Title = "Добавление пользователя";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" align="center">
    <div class="col-md-4">
        <h4 class="text-center text-success" style="padding-top: 10%">Добавление пользователя</h4>
        @using (Html.BeginForm("CreateUser", "User", FormMethod.Post, new { @class = "form-group", @novalidate = true }))
        {
            <div class="form-group row">
                @Html.TextBoxFor(model => model.Login, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.Login),
                })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.Email, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.Email),
                })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.Password, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.Password),
                })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.FirstName, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.FirstName),
                })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.MiddleName, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.MiddleName),
                })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.LastName, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.LastName),
                })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                Выберете роль/ли
            </div>

            <div class="form-group row">
                <select class="js-example-basic-multiple form-control" style="width:100%;" multiple="multiple" id="Roles" name="Roles">
                    @Html.Action("GetRolesForSelect", "Role")
                </select>
            </div>

            <div class="form-group row">
                <div class="form-check">
                    @Html.CheckBoxFor(model => model.IsDoctor, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.IsDoctor, "Доктор", new { @class = "form-check-label", @for = "IsDoctor" })
                </div>
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.Position, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.Position),
                })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.PlaceWork, new
                {
                    @class = "form-control",
                    @placeholder = Html.DisplayNameFor(model => model.PlaceWork),
                })
                @Html.ValidationMessageFor(model => model.PlaceWork, "", new { @class = "text-danger" })
            </div>

            <div class="form-group row">
                @Html.TextBoxFor(model => model.DateBirth, new
                {
                    @class = "form-control",
                    @placeholder = @Html.DisplayNameFor(user => user.DateBirth),
                    @type= "date"
                })
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>

            <div class="container">
                <input type="submit" class="btn btn-outline-success" value="Добавить" />
                @Html.ActionLink("Отмена", "Index", "Home", null, new { @class = "btn btn-outline-secondary" })
            </div>
        }
    </div>
</div>
